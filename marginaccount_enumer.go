// Code generated by "enumer -type MarginAccount -trimprefix MarginAccount -json"; DO NOT EDIT.

package tradovate

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _MarginAccountName = "UnspecifiedHedgerSpeculator"

var _MarginAccountIndex = [...]uint8{0, 11, 17, 27}

const _MarginAccountLowerName = "unspecifiedhedgerspeculator"

func (i MarginAccount) String() string {
	if i >= MarginAccount(len(_MarginAccountIndex)-1) {
		return fmt.Sprintf("MarginAccount(%d)", i)
	}
	return _MarginAccountName[_MarginAccountIndex[i]:_MarginAccountIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _MarginAccountNoOp() {
	var x [1]struct{}
	_ = x[MarginAccountUnspecified-(0)]
	_ = x[MarginAccountHedger-(1)]
	_ = x[MarginAccountSpeculator-(2)]
}

var _MarginAccountValues = []MarginAccount{MarginAccountUnspecified, MarginAccountHedger, MarginAccountSpeculator}

var _MarginAccountNameToValueMap = map[string]MarginAccount{
	_MarginAccountName[0:11]:       MarginAccountUnspecified,
	_MarginAccountLowerName[0:11]:  MarginAccountUnspecified,
	_MarginAccountName[11:17]:      MarginAccountHedger,
	_MarginAccountLowerName[11:17]: MarginAccountHedger,
	_MarginAccountName[17:27]:      MarginAccountSpeculator,
	_MarginAccountLowerName[17:27]: MarginAccountSpeculator,
}

var _MarginAccountNames = []string{
	_MarginAccountName[0:11],
	_MarginAccountName[11:17],
	_MarginAccountName[17:27],
}

// MarginAccountString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func MarginAccountString(s string) (MarginAccount, error) {
	if val, ok := _MarginAccountNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _MarginAccountNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to MarginAccount values", s)
}

// MarginAccountValues returns all values of the enum
func MarginAccountValues() []MarginAccount {
	return _MarginAccountValues
}

// MarginAccountStrings returns a slice of all String values of the enum
func MarginAccountStrings() []string {
	strs := make([]string, len(_MarginAccountNames))
	copy(strs, _MarginAccountNames)
	return strs
}

// IsAMarginAccount returns "true" if the value is listed in the enum definition. "false" otherwise
func (i MarginAccount) IsAMarginAccount() bool {
	for _, v := range _MarginAccountValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for MarginAccount
func (i MarginAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for MarginAccount
func (i *MarginAccount) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("MarginAccount should be a string, got %s", data)
	}

	var err error
	*i, err = MarginAccountString(s)
	return err
}
