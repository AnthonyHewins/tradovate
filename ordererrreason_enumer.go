// Code generated by "enumer -type OrderErrReason -trimprefix OrderErrReason -json"; DO NOT EDIT.

package tradovate

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _OrderErrReasonName = "SuccessAccountUnspecifiedAccountClosedAdvancedTrailingStopUnsupportedAnotherCommandPendingBackMonthProhibitedExecutionProviderNotConfiguredExecutionProviderUnavailableInvalidContractInvalidPriceLiquidationOnlyLiquidationOnlyBeforeExpirationMaxOrderQtyIsNotSpecifiedMaxOrderQtyLimitReachedMaxPosLimitMisconfiguredMaxPosLimitReachedMaxTotalPosLimitReachedMultipleAccountPlanRequiredNoQuoteNotEnoughLiquidityOtherExecutionRelatedParentRejectedRiskCheckTimeoutSessionClosedTooLateTradingLockedTrailingStopNonOrderQtyModifyUnauthorizedUnknownReasonUnsupported"

var _OrderErrReasonIndex = [...]uint16{0, 7, 25, 38, 69, 90, 109, 139, 167, 182, 194, 209, 240, 265, 288, 312, 330, 353, 380, 387, 405, 426, 440, 456, 469, 476, 489, 518, 530, 543, 554}

const _OrderErrReasonLowerName = "successaccountunspecifiedaccountclosedadvancedtrailingstopunsupportedanothercommandpendingbackmonthprohibitedexecutionprovidernotconfiguredexecutionproviderunavailableinvalidcontractinvalidpriceliquidationonlyliquidationonlybeforeexpirationmaxorderqtyisnotspecifiedmaxorderqtylimitreachedmaxposlimitmisconfiguredmaxposlimitreachedmaxtotalposlimitreachedmultipleaccountplanrequirednoquotenotenoughliquidityotherexecutionrelatedparentrejectedriskchecktimeoutsessionclosedtoolatetradinglockedtrailingstopnonorderqtymodifyunauthorizedunknownreasonunsupported"

func (i OrderErrReason) String() string {
	if i >= OrderErrReason(len(_OrderErrReasonIndex)-1) {
		return fmt.Sprintf("OrderErrReason(%d)", i)
	}
	return _OrderErrReasonName[_OrderErrReasonIndex[i]:_OrderErrReasonIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _OrderErrReasonNoOp() {
	var x [1]struct{}
	_ = x[OrderErrReasonSuccess-(0)]
	_ = x[OrderErrReasonAccountUnspecified-(1)]
	_ = x[OrderErrReasonAccountClosed-(2)]
	_ = x[OrderErrReasonAdvancedTrailingStopUnsupported-(3)]
	_ = x[OrderErrReasonAnotherCommandPending-(4)]
	_ = x[OrderErrReasonBackMonthProhibited-(5)]
	_ = x[OrderErrReasonExecutionProviderNotConfigured-(6)]
	_ = x[OrderErrReasonExecutionProviderUnavailable-(7)]
	_ = x[OrderErrReasonInvalidContract-(8)]
	_ = x[OrderErrReasonInvalidPrice-(9)]
	_ = x[OrderErrReasonLiquidationOnly-(10)]
	_ = x[OrderErrReasonLiquidationOnlyBeforeExpiration-(11)]
	_ = x[OrderErrReasonMaxOrderQtyIsNotSpecified-(12)]
	_ = x[OrderErrReasonMaxOrderQtyLimitReached-(13)]
	_ = x[OrderErrReasonMaxPosLimitMisconfigured-(14)]
	_ = x[OrderErrReasonMaxPosLimitReached-(15)]
	_ = x[OrderErrReasonMaxTotalPosLimitReached-(16)]
	_ = x[OrderErrReasonMultipleAccountPlanRequired-(17)]
	_ = x[OrderErrReasonNoQuote-(18)]
	_ = x[OrderErrReasonNotEnoughLiquidity-(19)]
	_ = x[OrderErrReasonOtherExecutionRelated-(20)]
	_ = x[OrderErrReasonParentRejected-(21)]
	_ = x[OrderErrReasonRiskCheckTimeout-(22)]
	_ = x[OrderErrReasonSessionClosed-(23)]
	_ = x[OrderErrReasonTooLate-(24)]
	_ = x[OrderErrReasonTradingLocked-(25)]
	_ = x[OrderErrReasonTrailingStopNonOrderQtyModify-(26)]
	_ = x[OrderErrReasonUnauthorized-(27)]
	_ = x[OrderErrReasonUnknownReason-(28)]
	_ = x[OrderErrReasonUnsupported-(29)]
}

var _OrderErrReasonValues = []OrderErrReason{OrderErrReasonSuccess, OrderErrReasonAccountUnspecified, OrderErrReasonAccountClosed, OrderErrReasonAdvancedTrailingStopUnsupported, OrderErrReasonAnotherCommandPending, OrderErrReasonBackMonthProhibited, OrderErrReasonExecutionProviderNotConfigured, OrderErrReasonExecutionProviderUnavailable, OrderErrReasonInvalidContract, OrderErrReasonInvalidPrice, OrderErrReasonLiquidationOnly, OrderErrReasonLiquidationOnlyBeforeExpiration, OrderErrReasonMaxOrderQtyIsNotSpecified, OrderErrReasonMaxOrderQtyLimitReached, OrderErrReasonMaxPosLimitMisconfigured, OrderErrReasonMaxPosLimitReached, OrderErrReasonMaxTotalPosLimitReached, OrderErrReasonMultipleAccountPlanRequired, OrderErrReasonNoQuote, OrderErrReasonNotEnoughLiquidity, OrderErrReasonOtherExecutionRelated, OrderErrReasonParentRejected, OrderErrReasonRiskCheckTimeout, OrderErrReasonSessionClosed, OrderErrReasonTooLate, OrderErrReasonTradingLocked, OrderErrReasonTrailingStopNonOrderQtyModify, OrderErrReasonUnauthorized, OrderErrReasonUnknownReason, OrderErrReasonUnsupported}

var _OrderErrReasonNameToValueMap = map[string]OrderErrReason{
	_OrderErrReasonName[0:7]:          OrderErrReasonSuccess,
	_OrderErrReasonLowerName[0:7]:     OrderErrReasonSuccess,
	_OrderErrReasonName[7:25]:         OrderErrReasonAccountUnspecified,
	_OrderErrReasonLowerName[7:25]:    OrderErrReasonAccountUnspecified,
	_OrderErrReasonName[25:38]:        OrderErrReasonAccountClosed,
	_OrderErrReasonLowerName[25:38]:   OrderErrReasonAccountClosed,
	_OrderErrReasonName[38:69]:        OrderErrReasonAdvancedTrailingStopUnsupported,
	_OrderErrReasonLowerName[38:69]:   OrderErrReasonAdvancedTrailingStopUnsupported,
	_OrderErrReasonName[69:90]:        OrderErrReasonAnotherCommandPending,
	_OrderErrReasonLowerName[69:90]:   OrderErrReasonAnotherCommandPending,
	_OrderErrReasonName[90:109]:       OrderErrReasonBackMonthProhibited,
	_OrderErrReasonLowerName[90:109]:  OrderErrReasonBackMonthProhibited,
	_OrderErrReasonName[109:139]:      OrderErrReasonExecutionProviderNotConfigured,
	_OrderErrReasonLowerName[109:139]: OrderErrReasonExecutionProviderNotConfigured,
	_OrderErrReasonName[139:167]:      OrderErrReasonExecutionProviderUnavailable,
	_OrderErrReasonLowerName[139:167]: OrderErrReasonExecutionProviderUnavailable,
	_OrderErrReasonName[167:182]:      OrderErrReasonInvalidContract,
	_OrderErrReasonLowerName[167:182]: OrderErrReasonInvalidContract,
	_OrderErrReasonName[182:194]:      OrderErrReasonInvalidPrice,
	_OrderErrReasonLowerName[182:194]: OrderErrReasonInvalidPrice,
	_OrderErrReasonName[194:209]:      OrderErrReasonLiquidationOnly,
	_OrderErrReasonLowerName[194:209]: OrderErrReasonLiquidationOnly,
	_OrderErrReasonName[209:240]:      OrderErrReasonLiquidationOnlyBeforeExpiration,
	_OrderErrReasonLowerName[209:240]: OrderErrReasonLiquidationOnlyBeforeExpiration,
	_OrderErrReasonName[240:265]:      OrderErrReasonMaxOrderQtyIsNotSpecified,
	_OrderErrReasonLowerName[240:265]: OrderErrReasonMaxOrderQtyIsNotSpecified,
	_OrderErrReasonName[265:288]:      OrderErrReasonMaxOrderQtyLimitReached,
	_OrderErrReasonLowerName[265:288]: OrderErrReasonMaxOrderQtyLimitReached,
	_OrderErrReasonName[288:312]:      OrderErrReasonMaxPosLimitMisconfigured,
	_OrderErrReasonLowerName[288:312]: OrderErrReasonMaxPosLimitMisconfigured,
	_OrderErrReasonName[312:330]:      OrderErrReasonMaxPosLimitReached,
	_OrderErrReasonLowerName[312:330]: OrderErrReasonMaxPosLimitReached,
	_OrderErrReasonName[330:353]:      OrderErrReasonMaxTotalPosLimitReached,
	_OrderErrReasonLowerName[330:353]: OrderErrReasonMaxTotalPosLimitReached,
	_OrderErrReasonName[353:380]:      OrderErrReasonMultipleAccountPlanRequired,
	_OrderErrReasonLowerName[353:380]: OrderErrReasonMultipleAccountPlanRequired,
	_OrderErrReasonName[380:387]:      OrderErrReasonNoQuote,
	_OrderErrReasonLowerName[380:387]: OrderErrReasonNoQuote,
	_OrderErrReasonName[387:405]:      OrderErrReasonNotEnoughLiquidity,
	_OrderErrReasonLowerName[387:405]: OrderErrReasonNotEnoughLiquidity,
	_OrderErrReasonName[405:426]:      OrderErrReasonOtherExecutionRelated,
	_OrderErrReasonLowerName[405:426]: OrderErrReasonOtherExecutionRelated,
	_OrderErrReasonName[426:440]:      OrderErrReasonParentRejected,
	_OrderErrReasonLowerName[426:440]: OrderErrReasonParentRejected,
	_OrderErrReasonName[440:456]:      OrderErrReasonRiskCheckTimeout,
	_OrderErrReasonLowerName[440:456]: OrderErrReasonRiskCheckTimeout,
	_OrderErrReasonName[456:469]:      OrderErrReasonSessionClosed,
	_OrderErrReasonLowerName[456:469]: OrderErrReasonSessionClosed,
	_OrderErrReasonName[469:476]:      OrderErrReasonTooLate,
	_OrderErrReasonLowerName[469:476]: OrderErrReasonTooLate,
	_OrderErrReasonName[476:489]:      OrderErrReasonTradingLocked,
	_OrderErrReasonLowerName[476:489]: OrderErrReasonTradingLocked,
	_OrderErrReasonName[489:518]:      OrderErrReasonTrailingStopNonOrderQtyModify,
	_OrderErrReasonLowerName[489:518]: OrderErrReasonTrailingStopNonOrderQtyModify,
	_OrderErrReasonName[518:530]:      OrderErrReasonUnauthorized,
	_OrderErrReasonLowerName[518:530]: OrderErrReasonUnauthorized,
	_OrderErrReasonName[530:543]:      OrderErrReasonUnknownReason,
	_OrderErrReasonLowerName[530:543]: OrderErrReasonUnknownReason,
	_OrderErrReasonName[543:554]:      OrderErrReasonUnsupported,
	_OrderErrReasonLowerName[543:554]: OrderErrReasonUnsupported,
}

var _OrderErrReasonNames = []string{
	_OrderErrReasonName[0:7],
	_OrderErrReasonName[7:25],
	_OrderErrReasonName[25:38],
	_OrderErrReasonName[38:69],
	_OrderErrReasonName[69:90],
	_OrderErrReasonName[90:109],
	_OrderErrReasonName[109:139],
	_OrderErrReasonName[139:167],
	_OrderErrReasonName[167:182],
	_OrderErrReasonName[182:194],
	_OrderErrReasonName[194:209],
	_OrderErrReasonName[209:240],
	_OrderErrReasonName[240:265],
	_OrderErrReasonName[265:288],
	_OrderErrReasonName[288:312],
	_OrderErrReasonName[312:330],
	_OrderErrReasonName[330:353],
	_OrderErrReasonName[353:380],
	_OrderErrReasonName[380:387],
	_OrderErrReasonName[387:405],
	_OrderErrReasonName[405:426],
	_OrderErrReasonName[426:440],
	_OrderErrReasonName[440:456],
	_OrderErrReasonName[456:469],
	_OrderErrReasonName[469:476],
	_OrderErrReasonName[476:489],
	_OrderErrReasonName[489:518],
	_OrderErrReasonName[518:530],
	_OrderErrReasonName[530:543],
	_OrderErrReasonName[543:554],
}

// OrderErrReasonString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func OrderErrReasonString(s string) (OrderErrReason, error) {
	if val, ok := _OrderErrReasonNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _OrderErrReasonNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to OrderErrReason values", s)
}

// OrderErrReasonValues returns all values of the enum
func OrderErrReasonValues() []OrderErrReason {
	return _OrderErrReasonValues
}

// OrderErrReasonStrings returns a slice of all String values of the enum
func OrderErrReasonStrings() []string {
	strs := make([]string, len(_OrderErrReasonNames))
	copy(strs, _OrderErrReasonNames)
	return strs
}

// IsAOrderErrReason returns "true" if the value is listed in the enum definition. "false" otherwise
func (i OrderErrReason) IsAOrderErrReason() bool {
	for _, v := range _OrderErrReasonValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for OrderErrReason
func (i OrderErrReason) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for OrderErrReason
func (i *OrderErrReason) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("OrderErrReason should be a string, got %s", data)
	}

	var err error
	*i, err = OrderErrReasonString(s)
	return err
}
