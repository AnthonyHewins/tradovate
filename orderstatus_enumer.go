// Code generated by "enumer -type OrderStatus -trimprefix OrderStatus -json"; DO NOT EDIT.

package tradovate

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _OrderStatusName = "UnspecifiedCanceledCompletedExpiredFilledPendingCancelPendingNewPendingReplaceRejectedSuspendedUnknownWorking"

var _OrderStatusIndex = [...]uint8{0, 11, 19, 28, 35, 41, 54, 64, 78, 86, 95, 102, 109}

const _OrderStatusLowerName = "unspecifiedcanceledcompletedexpiredfilledpendingcancelpendingnewpendingreplacerejectedsuspendedunknownworking"

func (i OrderStatus) String() string {
	if i >= OrderStatus(len(_OrderStatusIndex)-1) {
		return fmt.Sprintf("OrderStatus(%d)", i)
	}
	return _OrderStatusName[_OrderStatusIndex[i]:_OrderStatusIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _OrderStatusNoOp() {
	var x [1]struct{}
	_ = x[OrderStatusUnspecified-(0)]
	_ = x[OrderStatusCanceled-(1)]
	_ = x[OrderStatusCompleted-(2)]
	_ = x[OrderStatusExpired-(3)]
	_ = x[OrderStatusFilled-(4)]
	_ = x[OrderStatusPendingCancel-(5)]
	_ = x[OrderStatusPendingNew-(6)]
	_ = x[OrderStatusPendingReplace-(7)]
	_ = x[OrderStatusRejected-(8)]
	_ = x[OrderStatusSuspended-(9)]
	_ = x[OrderStatusUnknown-(10)]
	_ = x[OrderStatusWorking-(11)]
}

var _OrderStatusValues = []OrderStatus{OrderStatusUnspecified, OrderStatusCanceled, OrderStatusCompleted, OrderStatusExpired, OrderStatusFilled, OrderStatusPendingCancel, OrderStatusPendingNew, OrderStatusPendingReplace, OrderStatusRejected, OrderStatusSuspended, OrderStatusUnknown, OrderStatusWorking}

var _OrderStatusNameToValueMap = map[string]OrderStatus{
	_OrderStatusName[0:11]:         OrderStatusUnspecified,
	_OrderStatusLowerName[0:11]:    OrderStatusUnspecified,
	_OrderStatusName[11:19]:        OrderStatusCanceled,
	_OrderStatusLowerName[11:19]:   OrderStatusCanceled,
	_OrderStatusName[19:28]:        OrderStatusCompleted,
	_OrderStatusLowerName[19:28]:   OrderStatusCompleted,
	_OrderStatusName[28:35]:        OrderStatusExpired,
	_OrderStatusLowerName[28:35]:   OrderStatusExpired,
	_OrderStatusName[35:41]:        OrderStatusFilled,
	_OrderStatusLowerName[35:41]:   OrderStatusFilled,
	_OrderStatusName[41:54]:        OrderStatusPendingCancel,
	_OrderStatusLowerName[41:54]:   OrderStatusPendingCancel,
	_OrderStatusName[54:64]:        OrderStatusPendingNew,
	_OrderStatusLowerName[54:64]:   OrderStatusPendingNew,
	_OrderStatusName[64:78]:        OrderStatusPendingReplace,
	_OrderStatusLowerName[64:78]:   OrderStatusPendingReplace,
	_OrderStatusName[78:86]:        OrderStatusRejected,
	_OrderStatusLowerName[78:86]:   OrderStatusRejected,
	_OrderStatusName[86:95]:        OrderStatusSuspended,
	_OrderStatusLowerName[86:95]:   OrderStatusSuspended,
	_OrderStatusName[95:102]:       OrderStatusUnknown,
	_OrderStatusLowerName[95:102]:  OrderStatusUnknown,
	_OrderStatusName[102:109]:      OrderStatusWorking,
	_OrderStatusLowerName[102:109]: OrderStatusWorking,
}

var _OrderStatusNames = []string{
	_OrderStatusName[0:11],
	_OrderStatusName[11:19],
	_OrderStatusName[19:28],
	_OrderStatusName[28:35],
	_OrderStatusName[35:41],
	_OrderStatusName[41:54],
	_OrderStatusName[54:64],
	_OrderStatusName[64:78],
	_OrderStatusName[78:86],
	_OrderStatusName[86:95],
	_OrderStatusName[95:102],
	_OrderStatusName[102:109],
}

// OrderStatusString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func OrderStatusString(s string) (OrderStatus, error) {
	if val, ok := _OrderStatusNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _OrderStatusNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to OrderStatus values", s)
}

// OrderStatusValues returns all values of the enum
func OrderStatusValues() []OrderStatus {
	return _OrderStatusValues
}

// OrderStatusStrings returns a slice of all String values of the enum
func OrderStatusStrings() []string {
	strs := make([]string, len(_OrderStatusNames))
	copy(strs, _OrderStatusNames)
	return strs
}

// IsAOrderStatus returns "true" if the value is listed in the enum definition. "false" otherwise
func (i OrderStatus) IsAOrderStatus() bool {
	for _, v := range _OrderStatusValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for OrderStatus
func (i OrderStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for OrderStatus
func (i *OrderStatus) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("OrderStatus should be a string, got %s", data)
	}

	var err error
	*i, err = OrderStatusString(s)
	return err
}
