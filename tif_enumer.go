// Code generated by "enumer -type Tif -trimprefix TIF"; DO NOT EDIT.

package tradovate

import (
	"fmt"
	"strings"
)

const _TifName = "TifUnspecifiedTifDayTifFOKTifGTCTifGTDTifIOC"

var _TifIndex = [...]uint8{0, 14, 20, 26, 32, 38, 44}

const _TifLowerName = "tifunspecifiedtifdaytiffoktifgtctifgtdtifioc"

func (i Tif) String() string {
	if i >= Tif(len(_TifIndex)-1) {
		return fmt.Sprintf("Tif(%d)", i)
	}
	return _TifName[_TifIndex[i]:_TifIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _TifNoOp() {
	var x [1]struct{}
	_ = x[TifUnspecified-(0)]
	_ = x[TifDay-(1)]
	_ = x[TifFOK-(2)]
	_ = x[TifGTC-(3)]
	_ = x[TifGTD-(4)]
	_ = x[TifIOC-(5)]
}

var _TifValues = []Tif{TifUnspecified, TifDay, TifFOK, TifGTC, TifGTD, TifIOC}

var _TifNameToValueMap = map[string]Tif{
	_TifName[0:14]:       TifUnspecified,
	_TifLowerName[0:14]:  TifUnspecified,
	_TifName[14:20]:      TifDay,
	_TifLowerName[14:20]: TifDay,
	_TifName[20:26]:      TifFOK,
	_TifLowerName[20:26]: TifFOK,
	_TifName[26:32]:      TifGTC,
	_TifLowerName[26:32]: TifGTC,
	_TifName[32:38]:      TifGTD,
	_TifLowerName[32:38]: TifGTD,
	_TifName[38:44]:      TifIOC,
	_TifLowerName[38:44]: TifIOC,
}

var _TifNames = []string{
	_TifName[0:14],
	_TifName[14:20],
	_TifName[20:26],
	_TifName[26:32],
	_TifName[32:38],
	_TifName[38:44],
}

// TifString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func TifString(s string) (Tif, error) {
	if val, ok := _TifNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _TifNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to Tif values", s)
}

// TifValues returns all values of the enum
func TifValues() []Tif {
	return _TifValues
}

// TifStrings returns a slice of all String values of the enum
func TifStrings() []string {
	strs := make([]string, len(_TifNames))
	copy(strs, _TifNames)
	return strs
}

// IsATif returns "true" if the value is listed in the enum definition. "false" otherwise
func (i Tif) IsATif() bool {
	for _, v := range _TifValues {
		if i == v {
			return true
		}
	}
	return false
}
